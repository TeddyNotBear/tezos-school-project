{ parameter
    (or (or (or (or %acceptInvitation (or (unit %accepted) (unit %refused)) (unit %waiting))
                (address %addAdmin))
            (or (unit %participate) (address %removeAdmin)))
        (string %writeMsg)) ;
  storage
    (pair (pair (address %admin)
                (map %admin_map address (or (or (unit %accepted) (unit %refused)) (unit %waiting))))
          (map %participate_map address mutez)
          (map %user_map
             address
             (pair string (or (or (unit %bronze) (unit %gold)) (or (unit %platinum) (unit %silver)))))) ;
  code { LAMBDA
           (pair unit
                 (pair address (map address (or (or unit unit) unit)))
                 (map address mutez)
                 (map address (pair string (or (or unit unit) (or unit unit)))))
           unit
           { CDR ;
             CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "Access denied." ; FAILWITH } { UNIT } } ;
         SWAP ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     SENDER ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     DUP 2 ;
                     GET ;
                     IF_NONE
                       { DROP 2 ; PUSH string "You haven't been invited yet." ; FAILWITH }
                       { DROP ;
                         DUP 2 ;
                         IF_LEFT
                           { SWAP ;
                             DIG 2 ;
                             DROP 2 ;
                             IF_LEFT
                               { DROP ; PUSH string "You already accepted the invitation" ; FAILWITH }
                               { DROP ; PUSH string "You already refused the invitation" ; FAILWITH } }
                           { DROP ; DUP 3 ; CAR ; CDR ; DIG 2 ; SOME ; DIG 2 ; UPDATE } } ;
                     DUP 2 ;
                     CDR ;
                     SWAP ;
                     DIG 2 ;
                     CAR ;
                     CAR }
                   { DUP 2 ;
                     UNIT ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     DUP 3 ;
                     GET ;
                     IF_NONE
                       { DUP 3 ;
                         CAR ;
                         CDR ;
                         UNIT ;
                         RIGHT (or unit unit) ;
                         DIG 3 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE }
                       { DROP ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         UNIT ;
                         RIGHT (or unit unit) ;
                         SOME ;
                         DIG 3 ;
                         UPDATE } ;
                     DIG 2 ;
                     CAR ;
                     CAR } ;
                 PAIR }
               { IF_LEFT
                   { DIG 2 ;
                     DROP 2 ;
                     SENDER ;
                     DUP 2 ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     GET ;
                     IF_NONE
                       { PUSH string "You first need to pay 1 tez to participate" ; FAILWITH }
                       { DROP } ;
                     SENDER ;
                     AMOUNT ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     DUP 3 ;
                     GET ;
                     IF_NONE
                       { PUSH mutez 1000000 ;
                         AMOUNT ;
                         COMPARE ;
                         GT ;
                         IF { DUP 3 ; CDR ; CAR ; SWAP ; DIG 2 ; SWAP ; SOME ; SWAP ; UPDATE }
                            { DROP 2 ; PUSH string "You don't have enough money" ; FAILWITH } }
                       { DROP 3 ; DUP ; CDR ; CAR } ;
                     DUP 2 ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     CAR }
                   { DUP 2 ;
                     UNIT ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP 2 ;
                     CAR ;
                     CDR ;
                     DUP 2 ;
                     GET ;
                     IF_NONE
                       { DROP ; PUSH string "This address is not an Admin." ; FAILWITH }
                       { DROP ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         SWAP ;
                         NONE (or (or unit unit) unit) ;
                         SWAP ;
                         UPDATE } ;
                     DUP 2 ;
                     CDR ;
                     SWAP ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR } } }
           { DIG 2 ;
             DROP ;
             SENDER ;
             DUP 3 ;
             CDR ;
             CDR ;
             DUP 2 ;
             GET ;
             IF_NONE
               { DUP 3 ;
                 CDR ;
                 CDR ;
                 UNIT ;
                 LEFT unit ;
                 LEFT (or unit unit) ;
                 DIG 3 ;
                 PAIR ;
                 DIG 2 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE }
               { DROP ;
                 DUP 3 ;
                 CDR ;
                 CDR ;
                 UNIT ;
                 LEFT unit ;
                 LEFT (or unit unit) ;
                 DIG 3 ;
                 PAIR ;
                 SOME ;
                 DIG 2 ;
                 UPDATE } ;
             DUP 2 ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             CAR } ;
         PAIR ;
         NIL operation ;
         PAIR } }

